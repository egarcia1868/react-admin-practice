[{"/Users/eric/Desktop/repoClones/react-admin-practice/src/reportWebVitals.js":"1","/Users/eric/Desktop/repoClones/react-admin-practice/src/App.js":"2","/Users/eric/Desktop/repoClones/react-admin-practice/src/index.js":"3","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/UserList/index.js":"4","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/PostList/index.js":"5","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/MyUrlField/index.js":"6","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/Dashboard/index.js":"7","/Users/eric/Desktop/repoClones/react-admin-practice/src/utils/API.js":"8","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/AuthProvider/index.js":"9"},{"size":362,"mtime":1611180836413,"results":"10","hashOfConfig":"11"},{"size":877,"mtime":1611331280689,"results":"12","hashOfConfig":"11"},{"size":500,"mtime":1611180836411,"results":"13","hashOfConfig":"11"},{"size":566,"mtime":1611255420191,"results":"14","hashOfConfig":"11"},{"size":2858,"mtime":1611330285056,"results":"15","hashOfConfig":"11"},{"size":522,"mtime":1611190584338,"results":"16","hashOfConfig":"11"},{"size":303,"mtime":1611199269898,"results":"17","hashOfConfig":"11"},{"size":3224,"mtime":1611331652339,"results":"18","hashOfConfig":"11"},{"size":944,"mtime":1611200965322,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1u33uj7",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"22"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/eric/Desktop/repoClones/react-admin-practice/src/reportWebVitals.js",[],["42","43"],"/Users/eric/Desktop/repoClones/react-admin-practice/src/App.js",[],"/Users/eric/Desktop/repoClones/react-admin-practice/src/index.js",[],["44","45"],"/Users/eric/Desktop/repoClones/react-admin-practice/src/components/UserList/index.js",[],"/Users/eric/Desktop/repoClones/react-admin-practice/src/components/PostList/index.js",["46"],"import * as React from \"react\";\nimport { useMediaQuery } from \"@material-ui/core\"\nimport {\n  Filter, \n  Datagrid,\n  TextField,\n  ReferenceField,\n  EditButton,\n  List,\n  Edit,\n  Create,\n  SimpleForm,\n  ReferenceInput,\n  SelectInput,\n  TextInput,\n  SimpleList,\n} from 'react-admin';\n\nconst PostFilter = props => (\n  <Filter {...props}>\n    <TextInput label=\"Search\" source=\"q\" alwaysOn />\n    <ReferenceInput label=\"User\" source=\"userId\" reference=\"users\" allowEmpty>\n      <SelectInput optionText=\"name\" />\n    </ReferenceInput>  \n  </Filter>\n)\n\n// const PostList = props => {\n//   const isSmall = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n//   return (\n//     <List filters={<PostFilter />} {...props}>\n//       {isSmall ? (\n//         <SimpleList \n//           primaryText={record => record.title}\n//           secondaryText={record => `${record.views} views`}\n//           tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n//         />\n//       ) : (\n//       <Datagrid>\n//         <TextField source=\"id\" />\n//         <ReferenceField source=\"userId\" reference=\"users\">\n//           <TextField source=\"name\" />\n//         </ReferenceField>\n//         <TextField source=\"title\" />\n//         <TextField source=\"body\" />\n//         <EditButton />\n//       </Datagrid>\n//       )}\n//     </List>\n//   )\n// };\nconst PostList = props => {\n  const isSmall = useMediaQuery(theme => theme.breakpoints.down(\"sm\"));\n  return (\n    <List {...props}>\n      {isSmall ? (\n        <SimpleList \n          primaryText={record => record.title}\n          secondaryText={record => `${record.views} views`}\n          tertiaryText={record => new Date(record.published_at).toLocaleDateString()}\n        />\n      ) : (\n      <Datagrid>\n        <TextField source=\"id\" />\n        <ReferenceField source=\"userId\" reference=\"users\">\n          <TextField source=\"name\" />\n        </ReferenceField>\n        <TextField source=\"title\" />\n        <TextField source=\"body\" />\n        <EditButton />\n      </Datagrid>\n      )}\n    </List>\n  )\n};\n\nconst PostEdit = props => (\n  <Edit title={<PostTitle />}{...props}>\n    <SimpleForm>\n      <TextInput disabled source=\"id\" />\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"title\"/>\n      <TextInput multiline source=\"body\"/>\n    </SimpleForm>\n  </Edit>\n);\n\nconst PostTitle = ({ record }) => {\n  return <span>Post {record ? `\"${record.title}\"` : \"\"}</span>;\n}\n\nconst PostCreate = props => (\n  <Create {...props}>\n    <SimpleForm>\n      <ReferenceInput source=\"userId\" reference=\"users\">\n        <SelectInput optionText=\"name\" />\n      </ReferenceInput>\n      <TextInput source=\"title\"/>\n      <TextInput multiline source=\"body\"/>\n    </SimpleForm>\n  </Create>\n);\n\nexport {PostList, PostEdit, PostCreate};","/Users/eric/Desktop/repoClones/react-admin-practice/src/components/MyUrlField/index.js",[],"/Users/eric/Desktop/repoClones/react-admin-practice/src/components/Dashboard/index.js",[],["47","48"],"/Users/eric/Desktop/repoClones/react-admin-practice/src/utils/API.js",[],"/Users/eric/Desktop/repoClones/react-admin-practice/src/components/AuthProvider/index.js",["49"],{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"50","replacedBy":"54"},{"ruleId":"52","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":19,"column":7,"nodeType":"58","messageId":"59","endLine":19,"endColumn":17},{"ruleId":"50","replacedBy":"60"},{"ruleId":"52","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":1,"nodeType":"64","endLine":29,"endColumn":3},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"no-unused-vars","'PostFilter' is assigned a value but never used.","Identifier","unusedVar",["65"],["66"],"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation"]